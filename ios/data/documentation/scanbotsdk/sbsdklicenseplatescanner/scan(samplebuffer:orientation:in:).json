{"abstract":[{"text":"The actual scan function. Scans a ","type":"text"},{"type":"codeVoice","code":"CMSampleBuffer"},{"type":"text","text":" as received by AVFoundations camera API for a license plate and accumulates the result."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"kind":"text","text":"(scanSampleBuffer:orientation:inRect:) "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scan","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sampleBuffer"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@CMSampleBufferRef","text":"CMSampleBuffer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"orientation","kind":"externalParam"},{"kind":"text","text":" "},{"text":"videoOrientation","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVCaptureVideoOrientation","preciseIdentifier":"c:@E@AVCaptureVideoOrientation"},{"kind":"text","text":", "},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"text":"rect","kind":"internalParam"},{"kind":"text","text":": "},{"text":"CGRect","preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"kind":"text","text":"?"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"sampleBuffer","content":[{"type":"paragraph","inlineContent":[{"text":"The sample buffer.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The video frame orientation. Should be the orientation that the device currently has, not the actual image orientation."}]}],"name":"videoOrientation"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The rectangle in image coordinates in which to perform the scan. Must be within the boundaries of the video frame.","type":"text"}]}],"name":"rect"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The result of the scan.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner\/scan(sampleBuffer:orientation:in:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)"]},{"paths":["\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScanner(im)scanSampleBuffer:orientation:inRect:","modules":[{"name":"ScanbotSDK"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scan","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sampleBuffer","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CMSampleBuffer","kind":"typeIdentifier","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"kind":"text","text":", "},{"text":"orientation","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier","text":"CGRect"},{"text":") -> ","kind":"text"},{"text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"text":"?","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}],"symbolKind":"method","title":"scan(sampleBuffer:orientation:in:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner"]]},"sections":[],"references":{"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScanner":{"url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescanner","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SBSDKLicensePlateScanner","kind":"identifier"}],"navigatorTitle":[{"text":"SBSDKLicensePlateScanner","kind":"identifier"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner","type":"topic","kind":"symbol","title":"SBSDKLicensePlateScanner","abstract":[{"type":"text","text":"A class to scan a vehicleâ€™s license plate in a "},{"code":"UIImage","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"CMSampleBuffer"},{"type":"text","text":" and run a validation on the result."}]},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK":{"kind":"symbol","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","abstract":[{"type":"text","text":"Version: 5.1.4"}],"url":"\/documentation\/scanbotsdk","type":"topic","role":"collection","title":"ScanbotSDK"},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScannerResult":{"title":"SBSDKLicensePlateScannerResult","url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescannerresult","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBSDKLicensePlateScannerResult","kind":"identifier"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SBSDKLicensePlateScannerResult"}],"abstract":[{"text":"A class describing the result of a license plate scan.","type":"text"}],"kind":"symbol"},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScanner/scan(sampleBuffer:orientation:in:)":{"abstract":[{"type":"text","text":"The actual scan function. Scans a "},{"type":"codeVoice","code":"CMSampleBuffer"},{"type":"text","text":" as received by AVFoundations camera API for a license plate and accumulates the result."}],"type":"topic","role":"symbol","url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scan","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sampleBuffer"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@CMSampleBufferRef","text":"CMSampleBuffer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"orientation"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier","text":"CGRect"},{"kind":"text","text":") -> "},{"text":"SBSDKLicensePlateScannerResult","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","navigatorTitle":[{"text":"scanSampleBuffer:orientation:inRect:","kind":"identifier"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner\/scan(sampleBuffer:orientation:in:)","title":"scan(sampleBuffer:orientation:in:)"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"scanSampleBuffer:orientation:inRect:"},{"path":"\/metadata\/symbolKind","value":"method","op":"replace"},{"op":"replace","value":[{"kind":"text","text":"- "},{"text":"scanSampleBuffer:orientation:inRect:","kind":"identifier"}],"path":"\/metadata\/fragments"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"add","value":null,"path":"\/relationshipsSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"scanSampleBuffer:"},{"kind":"text","text":"("},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"opaqueCMSampleBuffer","preciseIdentifier":"c:@S@opaqueCMSampleBuffer","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"sampleBuffer"},{"kind":"text","text":" "},{"kind":"identifier","text":"orientation:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"internalParam","text":"videoOrientation"},{"kind":"text","text":" "},{"text":"inRect:","kind":"identifier"},{"kind":"text","text":"("},{"text":"CGRect","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"rect"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner\/title","value":"SBSDKLicensePlateScanner"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner\/fragments","value":[{"text":"SBSDKLicensePlateScanner","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"SBSDKLicensePlateScannerResult","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScannerResult\/title"},{"value":[{"kind":"identifier","text":"SBSDKLicensePlateScannerResult"}],"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScannerResult\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner~1scan(sampleBuffer:orientation:in:)\/title","value":"scanSampleBuffer:orientation:inRect:"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner~1scan(sampleBuffer:orientation:in:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}]}]}]}