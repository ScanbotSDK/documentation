{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":"(scanSampleBuffer:orientation:inRect:) ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scan","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sampleBuffer"},{"kind":"text","text":": "},{"text":"CMSampleBuffer","kind":"typeIdentifier","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"kind":"text","text":", "},{"kind":"externalParam","text":"orientation"},{"text":" ","kind":"text"},{"text":"videoOrientation","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"text":"rect","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@S@CGRect","text":"CGRect","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","text":"SBSDKLicensePlateScannerResult","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sample buffer."}]}],"name":"sampleBuffer"},{"content":[{"inlineContent":[{"type":"text","text":"The video frame orientation. Should be the orientation that the device currently has, not the actual image orientation."}],"type":"paragraph"}],"name":"videoOrientation"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The rectangle in image coordinates in which to perform the scan. Must be within the boundaries of the video frame.","type":"text"}]}],"name":"rect"}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The result of the scan.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner\/scan(sampleBuffer:orientation:in:)"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner"]]},"abstract":[{"type":"text","text":"The actual scan function. Scans a "},{"type":"codeVoice","code":"CMSampleBuffer"},{"type":"text","text":" as received by AVFoundations camera API for a license plate and accumulates the result."}],"metadata":{"modules":[{"name":"ScanbotSDK"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scan"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sampleBuffer"},{"kind":"text","text":": "},{"text":"CMSampleBuffer","kind":"typeIdentifier","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"text":", ","kind":"text"},{"text":"orientation","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AVCaptureVideoOrientation","preciseIdentifier":"c:@E@AVCaptureVideoOrientation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@S@CGRect","text":"CGRect","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"kind":"text","text":"?"}],"role":"symbol","title":"scan(sampleBuffer:orientation:in:)","navigatorTitle":[{"text":"scanSampleBuffer:orientation:inRect:","kind":"identifier"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScanner(im)scanSampleBuffer:orientation:inRect:"},"references":{"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK":{"type":"topic","abstract":[{"text":"Version: 6.0.0","type":"text"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","kind":"symbol","role":"collection","url":"\/documentation\/scanbotsdk","title":"ScanbotSDK"},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScanner/scan(sampleBuffer:orientation:in:)":{"kind":"symbol","url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"scan","kind":"identifier"},{"kind":"text","text":"("},{"text":"sampleBuffer","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CMSampleBuffer","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"text":", ","kind":"text"},{"text":"orientation","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect","text":"CGRect"},{"kind":"text","text":") -> "},{"text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner\/scan(sampleBuffer:orientation:in:)","navigatorTitle":[{"text":"scanSampleBuffer:orientation:inRect:","kind":"identifier"}],"abstract":[{"text":"The actual scan function. Scans a ","type":"text"},{"type":"codeVoice","code":"CMSampleBuffer"},{"text":" as received by AVFoundations camera API for a license plate and accumulates the result.","type":"text"}],"type":"topic","title":"scan(sampleBuffer:orientation:in:)"},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScannerResult":{"url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescannerresult","kind":"symbol","title":"SBSDKLicensePlateScannerResult","abstract":[{"type":"text","text":"A class describing the result of a license plate scan."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SBSDKLicensePlateScannerResult","kind":"identifier"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","navigatorTitle":[{"text":"SBSDKLicensePlateScannerResult","kind":"identifier"}]},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScanner":{"abstract":[{"text":"A class to scan a vehicleâ€™s license plate in a ","type":"text"},{"code":"UIImage","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"CMSampleBuffer","type":"codeVoice"},{"type":"text","text":" and run a validation on the result."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SBSDKLicensePlateScanner"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner","title":"SBSDKLicensePlateScanner","url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescanner","navigatorTitle":[{"text":"SBSDKLicensePlateScanner","kind":"identifier"}]}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"scanSampleBuffer:orientation:inRect:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"text":"scanSampleBuffer:orientation:inRect:","kind":"identifier"}]},{"path":"\/topicSections","value":null,"op":"add"},{"op":"add","value":null,"path":"\/relationshipsSections"},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"kind":"text","text":"- ("},{"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult","text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"scanSampleBuffer:"},{"kind":"text","text":"("},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"preciseIdentifier":"c:@S@opaqueCMSampleBuffer","kind":"typeIdentifier","text":"opaqueCMSampleBuffer"},{"text":" *) ","kind":"text"},{"text":"sampleBuffer","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"orientation:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation"},{"text":") ","kind":"text"},{"text":"videoOrientation","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"inRect:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier","text":"CGRect"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"rect"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"}},{"value":"scanSampleBuffer:orientation:inRect:","op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner~1scan(sampleBuffer:orientation:in:)\/title"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner~1scan(sampleBuffer:orientation:in:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}],"op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScannerResult\/title","op":"replace","value":"SBSDKLicensePlateScannerResult"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScannerResult\/fragments","value":[{"text":"SBSDKLicensePlateScannerResult","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner\/title","op":"replace","value":"SBSDKLicensePlateScanner"},{"value":[{"text":"SBSDKLicensePlateScanner","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}