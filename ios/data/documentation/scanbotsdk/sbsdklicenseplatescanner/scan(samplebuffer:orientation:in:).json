{"identifier":{"url":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner\/scan(sampleBuffer:orientation:in:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"text":"(scanSampleBuffer:orientation:inRect:) ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scan","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sampleBuffer"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@CMSampleBufferRef","text":"CMSampleBuffer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"orientation"},{"kind":"text","text":" "},{"text":"videoOrientation","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"rect"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect","text":"CGRect"},{"text":") -> ","kind":"text"},{"text":"SBSDKLicensePlateScannerResult","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","kind":"typeIdentifier","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sample buffer."}]}],"name":"sampleBuffer"},{"name":"videoOrientation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The video frame orientation. Should be the orientation that the device currently has, not the actual image orientation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The rectangle in image coordinates in which to perform the scan. Must be within the boundaries of the video frame."}]}],"name":"rect"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result of the scan."}]}]}],"abstract":[{"type":"text","text":"The actual scan function. Scans a "},{"type":"codeVoice","code":"CMSampleBuffer"},{"type":"text","text":" as received by AVFoundations camera API for a license plate and accumulates the result."}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}],"roleHeading":"Instance Method","role":"symbol","title":"scan(sampleBuffer:orientation:in:)","externalID":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScanner(im)scanSampleBuffer:orientation:inRect:","modules":[{"name":"ScanbotSDK"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scan"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sampleBuffer"},{"kind":"text","text":": "},{"text":"CMSampleBuffer","kind":"typeIdentifier","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"text":", ","kind":"text"},{"text":"orientation","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation"},{"kind":"text","text":", "},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGRect","preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult","text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"references":{"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScannerResult":{"title":"SBSDKLicensePlateScannerResult","type":"topic","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","navigatorTitle":[{"text":"SBSDKLicensePlateScannerResult","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A class describing the result of a license plate scan.","type":"text"}],"url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescannerresult","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBSDKLicensePlateScannerResult"}]},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScanner/scan(sampleBuffer:orientation:in:)":{"url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescanner\/scan(samplebuffer:orientation:in:)","title":"scan(sampleBuffer:orientation:in:)","type":"topic","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner\/scan(sampleBuffer:orientation:in:)","role":"symbol","abstract":[{"text":"The actual scan function. Scans a ","type":"text"},{"type":"codeVoice","code":"CMSampleBuffer"},{"type":"text","text":" as received by AVFoundations camera API for a license plate and accumulates the result."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scan","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sampleBuffer"},{"text":": ","kind":"text"},{"text":"CMSampleBuffer","kind":"typeIdentifier","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"orientation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect","text":"CGRect"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult","text":"SBSDKLicensePlateScannerResult"},{"text":"?","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}]},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK":{"role":"collection","title":"ScanbotSDK","url":"\/documentation\/scanbotsdk","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","type":"topic","kind":"symbol","abstract":[{"text":"Version: 6.0.0","type":"text"}]},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKLicensePlateScanner":{"kind":"symbol","title":"SBSDKLicensePlateScanner","url":"\/documentation\/scanbotsdk\/sbsdklicenseplatescanner","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBSDKLicensePlateScanner","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SBSDKLicensePlateScanner"}],"type":"topic","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScanner","abstract":[{"text":"A class to scan a vehicleâ€™s license plate in a ","type":"text"},{"code":"UIImage","type":"codeVoice"},{"type":"text","text":" or "},{"code":"CMSampleBuffer","type":"codeVoice"},{"text":" and run a validation on the result.","type":"text"}],"role":"symbol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"scanSampleBuffer:orientation:inRect:"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}],"path":"\/metadata\/fragments","op":"replace"},{"path":"\/topicSections","op":"add","value":null},{"value":null,"op":"add","path":"\/relationshipsSections"},{"op":"add","path":"\/seeAlsoSections","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"SBSDKLicensePlateScannerResult","kind":"typeIdentifier","identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKLicensePlateScannerResult","preciseIdentifier":"c:@M@ScanbotSDK@objc(cs)SBSDKLicensePlateScannerResult"},{"text":" *) ","kind":"text"},{"text":"scanSampleBuffer:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"opaqueCMSampleBuffer","preciseIdentifier":"c:@S@opaqueCMSampleBuffer"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"sampleBuffer"},{"text":" ","kind":"text"},{"text":"orientation:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@E@AVCaptureVideoOrientation","text":"AVCaptureVideoOrientation","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"internalParam","text":"videoOrientation"},{"text":" ","kind":"text"},{"kind":"identifier","text":"inRect:"},{"text":"(","kind":"text"},{"text":"CGRect","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect"},{"text":") ","kind":"text"},{"text":"rect","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScannerResult\/title","value":"SBSDKLicensePlateScannerResult"},{"value":[{"kind":"identifier","text":"SBSDKLicensePlateScannerResult"}],"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScannerResult\/fragments"},{"value":"scanSampleBuffer:orientation:inRect:","op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner~1scan(sampleBuffer:orientation:in:)\/title"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner~1scan(sampleBuffer:orientation:in:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"scanSampleBuffer:orientation:inRect:"}]},{"value":"SBSDKLicensePlateScanner","op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner\/title"},{"op":"replace","value":[{"kind":"identifier","text":"SBSDKLicensePlateScanner"}],"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKLicensePlateScanner\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}