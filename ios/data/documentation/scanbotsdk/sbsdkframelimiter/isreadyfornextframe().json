{"metadata":{"symbolKind":"method","modules":[{"name":"ScanbotSDK"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isReadyForNextFrame","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","title":"isReadyForNextFrame()","navigatorTitle":[{"kind":"identifier","text":"isReadyForNextFrame"}],"roleHeading":"Instance Method","externalID":"c:@M@ScanbotSDK@objc(cs)SBSDKFrameLimiter(im)isReadyForNextFrame"},"kind":"symbol","abstract":[{"type":"text","text":"Returns wether the next frame should be processed or not. Call this method consecutively each frame and process the frame if the result was "},{"type":"codeVoice","code":"True"},{"type":"text","text":". Otherwise skip the frame processing."}],"variants":[{"paths":["\/documentation\/scanbotsdk\/sbsdkframelimiter\/isreadyfornextframe()"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/scanbotsdk\/sbsdkframelimiter\/isreadyfornextframe()"]}],"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKFrameLimiter"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKFrameLimiter\/isReadyForNextFrame()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isReadyForNextFrame","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"True"},{"type":"text","text":", if since the last call enough time passed by to process the next frame, "},{"type":"codeVoice","code":"False"},{"type":"text","text":" otherwise."}]}],"kind":"content"}],"references":{"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKFrameLimiter":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SBSDKFrameLimiter"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKFrameLimiter","url":"\/documentation\/scanbotsdk\/sbsdkframelimiter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SBSDKFrameLimiter"}],"abstract":[{"type":"text","text":"A frame limiter class. An object can use this class to limit the number of events fired per second."}],"kind":"symbol","type":"topic","title":"SBSDKFrameLimiter"},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK/SBSDKFrameLimiter/isReadyForNextFrame()":{"role":"symbol","navigatorTitle":[{"text":"isReadyForNextFrame","kind":"identifier"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK\/SBSDKFrameLimiter\/isReadyForNextFrame()","url":"\/documentation\/scanbotsdk\/sbsdkframelimiter\/isreadyfornextframe()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isReadyForNextFrame","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns wether the next frame should be processed or not. Call this method consecutively each frame and process the frame if the result was "},{"code":"True","type":"codeVoice"},{"type":"text","text":". Otherwise skip the frame processing."}],"kind":"symbol","type":"topic","title":"isReadyForNextFrame()"},"doc://net.doo.ScanbotSDK/documentation/ScanbotSDK":{"type":"topic","abstract":[{"text":"Version: 6.0.0","type":"text"}],"identifier":"doc:\/\/net.doo.ScanbotSDK\/documentation\/ScanbotSDK","kind":"symbol","role":"collection","url":"\/documentation\/scanbotsdk","title":"ScanbotSDK"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"value":"isReadyForNextFrame","op":"replace","path":"\/metadata\/title"},{"value":"method","op":"replace","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"text":"isReadyForNextFrame","kind":"identifier"}]},{"value":null,"op":"add","path":"\/topicSections"},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier","text":"BOOL"},{"text":") ","kind":"text"},{"kind":"identifier","text":"isReadyForNextFrame"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"}},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKFrameLimiter\/title","value":"SBSDKFrameLimiter"},{"op":"replace","value":[{"kind":"identifier","text":"SBSDKFrameLimiter"}],"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKFrameLimiter\/fragments"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKFrameLimiter~1isReadyForNextFrame()\/title","op":"replace","value":"isReadyForNextFrame"},{"path":"\/references\/doc:~1~1net.doo.ScanbotSDK~1documentation~1ScanbotSDK~1SBSDKFrameLimiter~1isReadyForNextFrame()\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"isReadyForNextFrame"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}