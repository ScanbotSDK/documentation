{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawBytes","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}]}]}],"metadata":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawBytes","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"navigatorTitle":[{"text":"rawBytes","kind":"identifier"}],"title":"rawBytes","externalID":"c:@M@ScanbotBarcodeScannerSDK@objc(cs)SBSDKBarcodeItem(py)rawBytes","role":"symbol","modules":[{"name":"ScanbotBarcodeScannerSDK"}],"symbolKind":"property","roleHeading":"Instance Property"},"abstract":[{"type":"text","text":"Raw bytes of barcode contents."},{"type":"text","text":" "},{"type":"text","text":"Some barcode formats are able to encode binary data. If a barcode contains binary data, it’s provided as a list"},{"type":"text","text":" "},{"type":"text","text":"of bytes in the rawBytes field."},{"type":"text","text":" "},{"type":"text","text":"Some barcode formats additionally allow pieces of the data within to have different encodings - UTF-8, ASCII,"},{"type":"text","text":" "},{"type":"text","text":"binary, etc."},{"type":"text","text":" "},{"type":"text","text":"The rawBytesEncodings field lists the encoding of each range in the rawBytes array."},{"type":"text","text":" "},{"type":"text","text":"For barcode formats that contain a GS1 message (e.g. GS1 Composite), we recommend to use a GS1Handling and"},{"type":"text","text":" "},{"type":"text","text":"extract the GS1 message from the text."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem\/rawBytes"},"sections":[],"variants":[{"paths":["\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem\/rawbytes"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem\/rawbytes"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK","doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem"]]},"references":{"doc://net.doo.ScanbotBarcodeScannerSDK/documentation/ScanbotBarcodeScannerSDK/SBSDKBarcodeItem/rawBytes":{"abstract":[{"type":"text","text":"Raw bytes of barcode contents."},{"type":"text","text":" "},{"type":"text","text":"Some barcode formats are able to encode binary data. If a barcode contains binary data, it’s provided as a list"},{"type":"text","text":" "},{"type":"text","text":"of bytes in the rawBytes field."},{"type":"text","text":" "},{"type":"text","text":"Some barcode formats additionally allow pieces of the data within to have different encodings - UTF-8, ASCII,"},{"type":"text","text":" "},{"type":"text","text":"binary, etc."},{"type":"text","text":" "},{"type":"text","text":"The rawBytesEncodings field lists the encoding of each range in the rawBytes array."},{"type":"text","text":" "},{"type":"text","text":"For barcode formats that contain a GS1 message (e.g. GS1 Composite), we recommend to use a GS1Handling and"},{"type":"text","text":" "},{"type":"text","text":"extract the GS1 message from the text."}],"url":"\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem\/rawbytes","type":"topic","identifier":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem\/rawBytes","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawBytes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"title":"rawBytes","navigatorTitle":[{"text":"rawBytes","kind":"identifier"}],"kind":"symbol"},"doc://net.doo.ScanbotBarcodeScannerSDK/documentation/ScanbotBarcodeScannerSDK":{"abstract":[{"type":"text","text":"Version: 7.1.4"}],"kind":"symbol","identifier":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK","role":"collection","url":"\/documentation\/scanbotbarcodescannersdk","title":"ScanbotBarcodeScannerSDK","type":"topic"},"doc://net.doo.ScanbotBarcodeScannerSDK/documentation/ScanbotBarcodeScannerSDK/SBSDKBarcodeItem":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SBSDKBarcodeItem"}],"role":"symbol","url":"\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SBSDKBarcodeItem"}],"title":"SBSDKBarcodeItem","abstract":[{"text":"A single barcode found in the input image. Barcodes with the same content but different locations in the image are","type":"text"},{"text":" ","type":"text"},{"text":"considered separate barcodes.","type":"text"}],"identifier":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem","kind":"symbol"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/metadata\/roleHeading","value":"Instance Property","op":"replace"},{"path":"\/metadata\/title","value":"rawBytes","op":"replace"},{"path":"\/metadata\/symbolKind","value":"property","op":"replace"},{"path":"\/metadata\/fragments","value":[{"text":"rawBytes","kind":"identifier"}],"op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/relationshipsSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":", ","kind":"text"},{"text":"copy","kind":"keyword"},{"text":", ","kind":"text"},{"text":"readonly","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSData","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData"},{"text":" * ","kind":"text"},{"text":"rawBytes","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},"op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem~1rawBytes\/title","value":"rawBytes","op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem~1rawBytes\/fragments","value":[{"kind":"identifier","text":"rawBytes"}],"op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem\/title","value":"SBSDKBarcodeItem","op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem\/fragments","value":[{"text":"SBSDKBarcodeItem","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem\/navigatorTitle","value":[{"text":"SBSDKBarcodeItem","kind":"identifier"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}