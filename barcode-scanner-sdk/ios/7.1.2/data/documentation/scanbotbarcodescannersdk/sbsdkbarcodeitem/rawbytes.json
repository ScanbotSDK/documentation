{"variants":[{"paths":["\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem\/rawbytes"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem\/rawbytes"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem\/rawBytes"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawBytes"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Raw bytes of barcode contents."},{"type":"text","text":" "},{"type":"text","text":"Some barcode formats are able to encode binary data. If a barcode contains binary data, it’s provided as a list"},{"type":"text","text":" "},{"type":"text","text":"of bytes in the rawBytes field."},{"text":" ","type":"text"},{"type":"text","text":"Some barcode formats additionally allow pieces of the data within to have different encodings - UTF-8, ASCII,"},{"text":" ","type":"text"},{"text":"binary, etc.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The rawBytesEncodings field lists the encoding of each range in the rawBytes array."},{"type":"text","text":" "},{"text":"For barcode formats that contain a GS1 message (e.g. GS1 Composite), we recommend to use a GS1Handling and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"extract the GS1 message from the text."}],"kind":"symbol","metadata":{"externalID":"c:@M@ScanbotBarcodeScannerSDK@objc(cs)SBSDKBarcodeItem(py)rawBytes","modules":[{"name":"ScanbotBarcodeScannerSDK"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"rawBytes"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawBytes"},{"text":": ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"}],"title":"rawBytes","roleHeading":"Instance Property","symbolKind":"property"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK","doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem"]]},"references":{"doc://net.doo.ScanbotBarcodeScannerSDK/documentation/ScanbotBarcodeScannerSDK/SBSDKBarcodeItem/rawBytes":{"abstract":[{"type":"text","text":"Raw bytes of barcode contents."},{"text":" ","type":"text"},{"text":"Some barcode formats are able to encode binary data. If a barcode contains binary data, it’s provided as a list","type":"text"},{"type":"text","text":" "},{"text":"of bytes in the rawBytes field.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Some barcode formats additionally allow pieces of the data within to have different encodings - UTF-8, ASCII,"},{"type":"text","text":" "},{"type":"text","text":"binary, etc."},{"text":" ","type":"text"},{"type":"text","text":"The rawBytesEncodings field lists the encoding of each range in the rawBytes array."},{"type":"text","text":" "},{"type":"text","text":"For barcode formats that contain a GS1 message (e.g. GS1 Composite), we recommend to use a GS1Handling and"},{"text":" ","type":"text"},{"text":"extract the GS1 message from the text.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawBytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"url":"\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem\/rawbytes","identifier":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem\/rawBytes","title":"rawBytes","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"rawBytes","kind":"identifier"}]},"doc://net.doo.ScanbotBarcodeScannerSDK/documentation/ScanbotBarcodeScannerSDK":{"kind":"symbol","url":"\/documentation\/scanbotbarcodescannersdk","role":"collection","identifier":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK","type":"topic","title":"ScanbotBarcodeScannerSDK","abstract":[{"text":"Version: 7.1.2","type":"text"}]},"doc://net.doo.ScanbotBarcodeScannerSDK/documentation/ScanbotBarcodeScannerSDK/SBSDKBarcodeItem":{"role":"symbol","abstract":[{"type":"text","text":"A single barcode found in the input image. Barcodes with the same content but different locations in the image are"},{"type":"text","text":" "},{"type":"text","text":"considered separate barcodes."}],"type":"topic","navigatorTitle":[{"text":"SBSDKBarcodeItem","kind":"identifier"}],"title":"SBSDKBarcodeItem","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBSDKBarcodeItem","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/net.doo.ScanbotBarcodeScannerSDK\/documentation\/ScanbotBarcodeScannerSDK\/SBSDKBarcodeItem","url":"\/documentation\/scanbotbarcodescannersdk\/sbsdkbarcodeitem"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"path":"\/metadata\/roleHeading","value":"Instance Property","op":"replace"},{"op":"replace","value":"rawBytes","path":"\/metadata\/title"},{"op":"replace","value":"property","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"identifier","text":"rawBytes"}]},{"op":"add","path":"\/topicSections","value":null},{"path":"\/relationshipsSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","op":"add","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":", "},{"kind":"keyword","text":"copy"},{"text":", ","kind":"text"},{"text":"readonly","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSData","preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"rawBytes"},{"text":";","kind":"text"}]}]}},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem~1rawBytes\/title","value":"rawBytes"},{"value":[{"text":"rawBytes","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem~1rawBytes\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem\/title","value":"SBSDKBarcodeItem"},{"op":"replace","value":[{"kind":"identifier","text":"SBSDKBarcodeItem"}],"path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotBarcodeScannerSDK~1documentation~1ScanbotBarcodeScannerSDK~1SBSDKBarcodeItem\/navigatorTitle","value":[{"text":"SBSDKBarcodeItem","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}