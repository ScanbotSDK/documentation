{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":"(decryptData:context:error:) ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decrypt","kind":"identifier"},{"kind":"text","text":"("},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The data blob to decrypt."}],"type":"paragraph"}],"name":"data"},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The context to decrypt the data with."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The decrypted data."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK","doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting"]]},"identifier":{"url":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting\/decrypt(data:context:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"ScanbotDocumentScannerSDK"}],"title":"decrypt(data:context:)","externalID":"c:@M@ScanbotDocumentScannerSDK@objc(pl)SBSDKStorageCrypting(im)decryptData:context:error:","symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"decryptData:context:error:"}],"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"abstract":[{"text":"Decrypts the given encrypted data blob and returns the decrypted data blob.","type":"text"}],"variants":[{"paths":["\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting\/decrypt(data:context:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting\/decrypt(data:context:)"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"references":{"doc://net.doo.ScanbotDocumentScannerSDK/documentation/ScanbotDocumentScannerSDK/SBSDKStorageCrypting/decrypt(data:context:)":{"type":"topic","url":"\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting\/decrypt(data:context:)","required":true,"role":"symbol","navigatorTitle":[{"text":"decryptData:context:error:","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"identifier":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting\/decrypt(data:context:)","kind":"symbol","title":"decrypt(data:context:)","abstract":[{"type":"text","text":"Decrypts the given encrypted data blob and returns the decrypted data blob."}]},"doc://net.doo.ScanbotDocumentScannerSDK/documentation/ScanbotDocumentScannerSDK":{"kind":"symbol","title":"ScanbotDocumentScannerSDK","identifier":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK","role":"collection","url":"\/documentation\/scanbotdocumentscannersdk","abstract":[{"type":"text","text":"Version: 6.2.0"}],"type":"topic"},"doc://net.doo.ScanbotDocumentScannerSDK/documentation/ScanbotDocumentScannerSDK/SBSDKStorageCrypting":{"title":"SBSDKStorageCrypting","url":"\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting","kind":"symbol","abstract":[{"text":"Protocol for implementing encryption and decryption of (streamed) data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBSDKStorageCrypting","kind":"identifier"}],"identifier":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting","navigatorTitle":[{"kind":"identifier","text":"SBSDKStorageCrypting"}],"role":"symbol","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"path":"\/metadata\/title","value":"decryptData:context:error:","op":"replace"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"decryptData:context:error:"}]},{"op":"add","value":null,"path":"\/topicSections"},{"path":"\/relationshipsSections","op":"add","value":null},{"value":null,"path":"\/seeAlsoSections","op":"add"},{"value":{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"NSData","preciseIdentifier":"c:objc(cs)NSData"},{"text":" *) ","kind":"text"},{"text":"decryptData:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSData","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"data"},{"kind":"text","text":" "},{"kind":"identifier","text":"context:"},{"kind":"text","text":"("},{"text":"NSString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"context","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"error:"},{"kind":"text","text":"("},{"text":"NSError","preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"error"},{"kind":"text","text":";"}]}],"kind":"declarations"},"op":"replace","path":"\/primaryContentSections\/0"},{"path":"\/primaryContentSections\/1","value":{"parameters":[{"name":"data","content":[{"inlineContent":[{"type":"text","text":"The data blob to decrypt."}],"type":"paragraph"}]},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"The context to decrypt the data with.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"On output, a pointer to an error object that describes why the method failed, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if no error occurred. If you are not interested in the error information, pass ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for this parameter."}]}],"name":"error"}],"kind":"parameters"},"op":"replace"},{"path":"\/primaryContentSections\/2","op":"replace","value":{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The decrypted data."},{"text":" On failure, this method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]}},{"path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting~1decrypt(data:context:)\/title","value":"decryptData:context:error:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting~1decrypt(data:context:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"decryptData:context:error:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting\/title","value":"SBSDKStorageCrypting"},{"value":[{"text":"SBSDKStorageCrypting","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting\/navigatorTitle","value":[{"kind":"identifier","text":"SBSDKStorageCrypting"}]}]}]}