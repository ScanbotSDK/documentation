{"hierarchy":{"paths":[["doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK","doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":"(decryptData:context:error:) ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decrypt"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"inlineContent":[{"type":"text","text":"The data blob to decrypt."}],"type":"paragraph"}]},{"name":"context","content":[{"inlineContent":[{"type":"text","text":"The context to decrypt the data with."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The decrypted data."}]}],"kind":"content"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"decryptData:context:error:"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decrypt"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"required":true,"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"ScanbotDocumentScannerSDK"}],"title":"decrypt(data:context:)","symbolKind":"method","externalID":"c:@M@ScanbotDocumentScannerSDK@objc(pl)SBSDKStorageCrypting(im)decryptData:context:error:"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting\/decrypt(data:context:)"},"abstract":[{"text":"Decrypts the given encrypted data blob and returns the decrypted data blob.","type":"text"}],"variants":[{"paths":["\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting\/decrypt(data:context:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting\/decrypt(data:context:)"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://net.doo.ScanbotDocumentScannerSDK/documentation/ScanbotDocumentScannerSDK":{"url":"\/documentation\/scanbotdocumentscannersdk","title":"ScanbotDocumentScannerSDK","abstract":[{"text":"Version: 7.0.3","type":"text"}],"identifier":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK","role":"collection","type":"topic","kind":"symbol"},"doc://net.doo.ScanbotDocumentScannerSDK/documentation/ScanbotDocumentScannerSDK/SBSDKStorageCrypting/decrypt(data:context:)":{"role":"symbol","url":"\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting\/decrypt(data:context:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"kind":"text","text":"("},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"}],"navigatorTitle":[{"text":"decryptData:context:error:","kind":"identifier"}],"title":"decrypt(data:context:)","identifier":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting\/decrypt(data:context:)","required":true,"abstract":[{"text":"Decrypts the given encrypted data blob and returns the decrypted data blob.","type":"text"}]},"doc://net.doo.ScanbotDocumentScannerSDK/documentation/ScanbotDocumentScannerSDK/SBSDKStorageCrypting":{"type":"topic","abstract":[{"type":"text","text":"Protocol for implementing encryption and decryption of (streamed) data."}],"navigatorTitle":[{"kind":"identifier","text":"SBSDKStorageCrypting"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBSDKStorageCrypting","kind":"identifier"}],"title":"SBSDKStorageCrypting","url":"\/documentation\/scanbotdocumentscannersdk\/sbsdkstoragecrypting","identifier":"doc:\/\/net.doo.ScanbotDocumentScannerSDK\/documentation\/ScanbotDocumentScannerSDK\/SBSDKStorageCrypting","kind":"symbol","role":"symbol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","value":"Instance Method","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","op":"replace","value":"decryptData:context:error:"},{"op":"replace","value":"method","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"decryptData:context:error:","kind":"identifier"}]},{"path":"\/topicSections","value":null,"op":"add"},{"value":null,"op":"add","path":"\/relationshipsSections"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSData","text":"NSData","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"decryptData:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSData","preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"data","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"context:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"context","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"error:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"error"},{"kind":"text","text":";"}]}]},"op":"replace","path":"\/primaryContentSections\/0"},{"op":"replace","path":"\/primaryContentSections\/1","value":{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data blob to decrypt."}]}],"name":"data"},{"content":[{"inlineContent":[{"text":"The context to decrypt the data with.","type":"text"}],"type":"paragraph"}],"name":"context"},{"name":"error","content":[{"inlineContent":[{"type":"text","text":"On output, a pointer to an error object that describes why the method failed, or "},{"code":"nil","type":"codeVoice"},{"text":" if no error occurred. If you are not interested in the error information, pass ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for this parameter."}],"type":"paragraph"}]}],"kind":"parameters"}},{"value":{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The decrypted data."},{"type":"text","text":" On failure, this method returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},"op":"replace","path":"\/primaryContentSections\/2"},{"path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting~1decrypt(data:context:)\/title","op":"replace","value":"decryptData:context:error:"},{"value":[{"text":"- ","kind":"text"},{"text":"decryptData:context:error:","kind":"identifier"}],"path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting~1decrypt(data:context:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting\/title","value":"SBSDKStorageCrypting","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting\/fragments","value":[{"text":"SBSDKStorageCrypting","kind":"identifier"}]},{"path":"\/references\/doc:~1~1net.doo.ScanbotDocumentScannerSDK~1documentation~1ScanbotDocumentScannerSDK~1SBSDKStorageCrypting\/navigatorTitle","value":[{"text":"SBSDKStorageCrypting","kind":"identifier"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}